<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>j</string>
		<string>jup</string>
	</array>
	<key>name</key>
	<string>Jupiter</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#top_ctx</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>expr_ctx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#general</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(func)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.jup</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Lambda declared as "func (...) { ... }"</string>
					<key>end</key>
					<string>(\))\s*</string>
					<key>name</key>
					<string>meta.lambda.jup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_ctx</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\\)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.jup</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Lambda declared as "\... -&gt; ..."</string>
					<key>end</key>
					<string>\s+(-&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.jup</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.lamda.jup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_ctx</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(let)\s+([!$%&amp;'*+\-/:|~&lt;-Z^-z\d]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.let.jup</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Variable definition using 'let'</string>
					<key>end</key>
					<string>\s*(=)</string>
					<key>name</key>
					<string>meta.let.variable.jup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_ctx</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>comment</key>
					<string>Normal keyword for conditions, loops, etc</string>
					<key>match</key>
					<string>\b(if|then|else|let|loop|for|-&gt;)\b</string>
					<key>name</key>
					<string>keyword.control.jup</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:(?!func))([!$%&amp;'*+\-/:|~&lt;-Z^-z\d]+)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.jup</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Function call</string>
					<key>end</key>
					<string>(\))</string>
					<key>name</key>
					<string>meta.funccall.jup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expr_ctx</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.jup</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Member access operator</string>
					<key>match</key>
					<string>\.([!$%&amp;'*+\-/:|~&lt;-Z^-z\d]+)</string>
					<key>name</key>
					<string>meta.member.jup</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Int/Real constants</string>
					<key>match</key>
					<string>\b\d+(\.\d*)?</string>
					<key>name</key>
					<string>constant.numeric.jup</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Other constants</string>
					<key>match</key>
					<string>\b(true|false|_|\(\s*\))\b</string>
					<key>name</key>
					<string>constant.language.jup</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>comment</key>
					<string>Block of code (expressions)</string>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>meta.block.jup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expr_ctx</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>general</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Single-line comment</string>
					<key>match</key>
					<string>#.*$</string>
					<key>name</key>
					<string>comment.line.jup</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\"</string>
					<key>comment</key>
					<string>String constant</string>
					<key>end</key>
					<string>\"</string>
					<key>name</key>
					<string>string.quoted.double.jup</string>
				</dict>
			</array>
		</dict>
		<key>top_ctx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#general</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_ctx</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Module import at toplevel</string>
					<key>match</key>
					<string>\b(import)\b</string>
					<key>name</key>
					<string>keyword.control.import.jup</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(func)\s+([!$%&amp;'*+\-/:|~&lt;-Z^-z\d]+)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.jup</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.jup</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Function declaration at toplevel</string>
					<key>end</key>
					<string>(\))</string>
					<key>name</key>
					<string>meta.funcdecl.jup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_ctx</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(type)\s+([!$%&amp;'*+\-/:|~&lt;-Z^-z\d]+)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.jup</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.jup</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Type declaration with arguments</string>
					<key>end</key>
					<string>(\))\s*(=)</string>
					<key>endCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.jup</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.typedecl.jup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_ctx</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.jup</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.jup</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.jup</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Type declaration without arguments</string>
					<key>match</key>
					<string>\b(type)\s+([!$%&amp;'*+\-/:|~&lt;-Z^-z\d]+)\s*(=)</string>
					<key>name</key>
					<string>meta.typedecl.jup</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>([!$%&amp;'*+\-/:|~&lt;-Z^-z\d]+)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.jup</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Type constructor</string>
					<key>end</key>
					<string>(\))</string>
					<key>name</key>
					<string>meta.constructor.jup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_ctx</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>comment</key>
					<string>Block of code (expressions)</string>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>meta.block.jup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expr_ctx</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type_ctx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#general</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Polytype</string>
					<key>match</key>
					<string>\\\s*([!$%&amp;'*+\-/:|~&lt;-Z^-z\d]+)</string>
					<key>name</key>
					<string>variable.parameter.polytype.jup</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Wildcard type</string>
					<key>match</key>
					<string>\b_</string>
					<key>name</key>
					<string>variable.parameter.wildcard.jup</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Concrete type</string>
					<key>match</key>
					<string>\b[A-Z][!$%&amp;'*+\-/:|~&lt;-Z^-z\d]+</string>
					<key>name</key>
					<string>storage.type.concrete.jup</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.jup</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Arrow in function type</string>
					<key>match</key>
					<string>(?:\s*)(-&gt;)(?:\s*)</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>comment</key>
					<string>Parenthesis (tuple/concrete type)</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.parens.jup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_ctx</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.jup</string>
	<key>uuid</key>
	<string>3fb1017f-0e67-4de1-a684-5fc1cce52b0d</string>
</dict>
</plist>
